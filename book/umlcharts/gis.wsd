@startuml

class gis_header {
    +HASH_L4_CONST: int = 5381
    +MAX_HOSTS: int = 10000
    +MAX_PORTS: int = 10000
    +DATE_LIMIT: int = 65
    +GLOBAL_INFO_EXT: string = "_gis.json"
+get_file_name(org_file_name: char*, new_extension: const char*): char*
    +host_hash_func(addr_hash: unsigned int, addr: struct in_addr): unsigned int
    +port_hash_func(port_hash: unsigned int, port: uint16_t): unsigned int
    +get_file_size(file: char*): uint64_t
    +print_general_info(gis: gen_inf_s): void
    +save_gis_to_json(gis: gen_inf_s, filename: char*, num_ports_g: uint32_t, num_hosts_g: uint32_t, duration: double): void
    +get_packet_time_stamp_mt(timestamp: const struct timeval*): char*
    +get_packet_time_stamp_js(timestamp: const struct timeval*): char*
}
@startuml

class ddos_header {
    +DDOS_MIN_TIME: int = 0
    +DDOS_MAX_TIME: double = 100000000.0
    +DDOS_PACKET_LIMIT: int = 3
    +DDOS_UDP_LIMIT_MULT: int = 2
    +DDOS_UDP_LIMIT: int = 1000
    +GLOBAL_DDOS_EXT: string = "_ddos.json"
}

class ddos_info {
    - victim: struct in_addr
    - attackers: struct ddos_addr_ll*
    - dst_port: uint32_t
}

class ddos_addr_ll {
    - id: uint32_t
    - addr: struct in_addr
    - src_port: uint32_t
    - dest_port: uint32_t
    - next: struct ddos_addr_ll*
}

class ddos_functions {
    +calculate_avg_packets_per_time(conv: conv_s, start_time: double, end_time: double): double
    +calculate_ema(current_value: double, previous_ema: double, alpha: double): double
    +analyze_ddos(conversations: conv_s[MAX_L4_CONVERSATIONS], filename: char*, conv_count: uint32_t, MAIN_RET_VAL: ret_val*): void
    +detect_flood(convo: conv_s): int
    +add_to_ddos_ll(root: ddos_addr_ll**, atkr_addr: struct in_addr, src_port: uint32_t, dest_port: uint32_t): int
    +free_ddos_list(root: ddos_addr_ll**): void
}

ddos_header -- ddos_info
ddos_header -- ddos_addr_ll
ddos_header -- ddos_functions

@enduml

struct host_s {
    - raw_addr: struct in_addr
    - count: int
}

struct port_s {
    - nthos_port: uint16_t
    - count: int
}

struct gen_inf_s {
    - hosts_table: host_s[MAX_HOSTS]
    - ports_table: port_s[MAX_PORTS]
    - filesize: uint64_t
    - num_packets: uint64_t
}

gis_header -- host_s
gis_header -- port_s
gis_header -- gen_inf_s

@enduml
